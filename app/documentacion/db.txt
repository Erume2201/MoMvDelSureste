-- -----------------------------------------------------
-- Esquema: gestion_recoleccion
-- Este esquema es la base de datos para el sistema de gestión de contratos y recolección.
-- Se utiliza una intercalación (collation) compatible con MySQL 5.7 y versiones anteriores.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gestion_recoleccion` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE `gestion_recoleccion`;

-- -----------------------------------------------------
-- Tabla `usuarios`
-- Almacena la información de los usuarios del sistema (empleados).
-- Se incluye un hash para la contraseña por seguridad.
-- Los campos 'email' y 'rfc' son únicos para evitar duplicados.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `apellidos` VARCHAR(100) NOT NULL,
  `rfc` VARCHAR(13) NOT NULL,
  `email` VARCHAR(150) NOT NULL,
  `contrasena_hash` VARCHAR(255) NOT NULL,
  `rol` ENUM('administrador', 'operador', 'supervisor') NOT NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC),
  UNIQUE INDEX `rfc_UNIQUE` (`rfc` ASC))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `clientes`
-- Contiene los datos generales de la empresa cliente.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clientes` (
  `id_cliente` INT NOT NULL AUTO_INCREMENT,
  `nombre_razon_social` VARCHAR(255) NOT NULL,
  `numero_registro_ambiental` VARCHAR(50) NULL,
  `direccion` VARCHAR(255) NULL,
  `colonia` VARCHAR(100) NULL,
  `ciudad` VARCHAR(100) NULL,
  `estado` VARCHAR(50) NULL,
  `cp` VARCHAR(10) NULL,
  `horario_trabajo` VARCHAR(255) NULL,
  `nombre_responsable_entrega` VARCHAR(100) NULL,
  `telefono_responsable_entrega` VARCHAR(20) NULL,
  PRIMARY KEY (`id_cliente`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `tiendas`
-- Almacena la información fiscal de cada sucursal o "tienda" del cliente.
-- Se enlaza con la tabla 'clientes' a través de la clave foránea 'id_cliente'.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `tiendas` (
  `id_tienda` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `nombre_razon_social` VARCHAR(255) NOT NULL,
  `rfc` VARCHAR(13) NULL,
  `domicilio_fiscal` VARCHAR(255) NULL,
  `colonia` VARCHAR(100) NULL,
  `ciudad` VARCHAR(100) NULL,
  `estado` VARCHAR(50) NULL,
  `codigo_postal` VARCHAR(10) NULL,
  `tipo_localidad` VARCHAR(50) NULL,
  `nombre_apoderado_legal` VARCHAR(255) NULL,
  `forma_pago` VARCHAR(50) NULL,
  `metodo_pago` VARCHAR(50) NULL,
  `uso_cfdi` VARCHAR(50) NULL,
  `regimen_fiscal` VARCHAR(50) NULL,
  `contacto_cuentas_pagar` VARCHAR(100) NULL,
  `email` VARCHAR(150) NULL,
  `telefono` VARCHAR(20) NULL,
  `coordenadas_google_maps` VARCHAR(255) NULL,
  `detalles_referencias` TEXT NULL,
  PRIMARY KEY (`id_tienda`),
  INDEX `fk_tiendas_clientes_idx` (`id_cliente` ASC),
  CONSTRAINT `fk_tiendas_clientes`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `clientes` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `contratos`
-- Registra los detalles de cada contrato, vinculando a un cliente con una tienda específica.
-- Define la frecuencia y fechas de recolección.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `contratos` (
  `id_contrato` INT NOT NULL AUTO_INCREMENT,
  `id_cliente` INT NOT NULL,
  `id_tienda` INT NOT NULL,
  `fecha_creacion` DATE NOT NULL,
  `fecha_terminacion` DATE NOT NULL,
  `fecha_inicial_recoleccion` DATE NOT NULL,
  `frecuencia_recoleccion` ENUM('semanal', 'quincenal', 'mensual') NOT NULL,
  `dia_fijo_recoleccion` ENUM('Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo') NOT NULL,
  PRIMARY KEY (`id_contrato`),
  INDEX `fk_contratos_clientes1_idx` (`id_cliente` ASC),
  INDEX `fk_contratos_tiendas1_idx` (`id_tienda` ASC),
  CONSTRAINT `fk_contratos_clientes1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `clientes` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_contratos_tiendas1`
    FOREIGN KEY (`id_tienda`)
    REFERENCES `tiendas` (`id_tienda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `operadores`
-- Almacena la información de los operadores de los vehículos.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `operadores` (
  `id_operador` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NOT NULL,
  `apellidos` VARCHAR(100) NOT NULL,
  `licencia` VARCHAR(50) NULL,
  `tipo_licencia` VARCHAR(50) NULL,
  PRIMARY KEY (`id_operador`))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `vehiculos`
-- Almacena los datos de los vehículos de recolección.
-- Los campos 'numero_economico', 'placas' y 'numero_serie' son únicos.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `vehiculos` (
  `id_vehiculo` INT NOT NULL AUTO_INCREMENT,
  `tipo_vehiculo` VARCHAR(50) NOT NULL,
  `numero_economico` VARCHAR(50) NOT NULL,
  `placas` VARCHAR(10) NOT NULL,
  `numero_serie` VARCHAR(50) NOT NULL,
  `poliza_seguro` VARCHAR(50) NULL,
  PRIMARY KEY (`id_vehiculo`),
  UNIQUE INDEX `numero_economico_UNIQUE` (`numero_economico` ASC),
  UNIQUE INDEX `placas_UNIQUE` (`placas` ASC),
  UNIQUE INDEX `numero_serie_UNIQUE` (`numero_serie` ASC))
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Tabla `manifiestos`
-- Registra cada recolección de forma individual.
-- Se relaciona con un contrato, un operador y un vehículo específicos.
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `manifiestos` (
  `id_manifiesto` INT NOT NULL AUTO_INCREMENT,
  `id_contrato` INT NOT NULL,
  `id_operador` INT NOT NULL,
  `id_vehiculo` INT NOT NULL,
  `fecha_recoleccion` DATE NOT NULL,
  `peso_recolectado_kg` DECIMAL(10,2) NULL,
  `estatus` ENUM('programado', 'en_ruta', 'completado', 'cancelado') NOT NULL,
  PRIMARY KEY (`id_manifiesto`),
  INDEX `fk_manifiestos_contratos1_idx` (`id_contrato` ASC),
  INDEX `fk_manifiestos_operadores1_idx` (`id_operador` ASC),
  INDEX `fk_manifiestos_vehiculos1_idx` (`id_vehiculo` ASC),
  CONSTRAINT `fk_manifiestos_contratos1`
    FOREIGN KEY (`id_contrato`)
    REFERENCES `contratos` (`id_contrato`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_manifiestos_operadores1`
    FOREIGN KEY (`id_operador`)
    REFERENCES `operadores` (`id_operador`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_manifiestos_vehiculos1`
    FOREIGN KEY (`id_vehiculo`)
    REFERENCES `vehiculos` (`id_vehiculo`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;